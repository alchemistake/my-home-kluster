apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: node-red
  name: node-red
  labels:
    app.kubernetes.io/name: node-red
    app.kubernetes.io/instance: node-red
    app.kubernetes.io/version: "1.3.5"
spec:
  revisionHistoryLimit: 3
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: node-red
      app.kubernetes.io/instance: node-red
  template:
    metadata:
      labels:
        app.kubernetes.io/name: node-red
        app.kubernetes.io/instance: node-red
    spec:
      serviceAccountName: default
      dnsPolicy: ClusterFirst
      enableServiceLinks: true
      containers:
        - name: node-red
          volumeMounts:
            - name: data
              mountPath: /data
          image: "nodered/node-red:1.3.5"
          imagePullPolicy: IfNotPresent
          env:
            - name: "FLOWS"
              value: "flows.json"
            - name: "NODE_OPTIONS"
              value: ""
            - name: "NODE_RED_ENABLE_PROJECTS"
              value: ""
            - name: "NODE_RED_ENABLE_SAFE_MODE"
              value: ""
            - name: "TZ"
              value: "UTC"
          ports:
            - name: http
              containerPort: 1880
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: 1880
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          readinessProbe:
            tcpSocket:
              port: 1880
            initialDelaySeconds: 0
            failureThreshold: 3
            timeoutSeconds: 1
            periodSeconds: 10
          startupProbe:
            tcpSocket:
              port: 1880
            initialDelaySeconds: 0
            failureThreshold: 30
            timeoutSeconds: 1
            periodSeconds: 5
      volumes:
        - name: data
          hostPath:
            path: /k3s/node-red
